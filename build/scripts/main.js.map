{
  "version": 3,
  "sources": ["source/scripts/modules/color-converter.js", "source/scripts/modules/code-generator.js", "source/scripts/modules/shadow-generator.js", "source/scripts/main.js"],
  "sourcesContent": ["export function hexToRgba (hex, opacity) {\n  const cleanHex = hex.replace(/^#/, '');\n\n  if (opacity < 0 || opacity > 1) {\n    throw new Error('Opacity range is from 0 to 1');\n  }\n\n  const r = parseInt(cleanHex.slice(0, 2), 16);\n  const g = parseInt(cleanHex.slice(2, 4), 16);\n  const b = parseInt(cleanHex.slice(4, 6), 16);\n\n  return `rgba(${r}, ${g}, ${b}, ${opacity})`;\n}\n", "import { hexToRgba } from './color-converter.js';\n\nexport function generateCSSCode (horizontal, vertical, blur, spread, shadowColor, boxColor, opacity, shadowType) {\n  const shadowColorWithOpacity = hexToRgba(shadowColor, opacity);\n\n  const shadowValue = `${horizontal}px ${vertical}px ${blur}px ${spread}px ${shadowColorWithOpacity}\n  ${shadowType === 'inset' ? 'inset' : ''}`;\n\n  const cssCode = `.box {\n    background: ${boxColor};\n    box-shadow: ${shadowValue};\n  }`;\n\n  return cssCode;\n}\n", "import { hexToRgba } from './color-converter.js';\nimport { generateCSSCode } from './code-generator.js';\n\nexport function initShadowGenerator() {\n  const elements = getDOMElements();\n\n  setInitialValues(elements);\n  setupEventListeners(elements);\n  updateShadowPreview(elements);\n}\n\nfunction getDOMElements() {\n  return {\n    horizontalInput: document.getElementById('horizontal'),\n    horizontalRange: document.getElementById('h-length'),\n    verticalInput: document.getElementById('vertical'),\n    verticalRange: document.getElementById('v-length'),\n    blurInput: document.getElementById('blur'),\n    blurRange: document.getElementById('blur-radius'),\n    spreadInput: document.getElementById('spread'),\n    spreadRange: document.getElementById('spread-radius'),\n    opacityInput: document.getElementById('opacity'),\n    opacityRange: document.getElementById('opacity-range'),\n\n    shadowColorPicker: document.getElementById('shadow'),\n    shadowColorText: document.getElementById('shadow-color'),\n    backgroundColorPicker: document.getElementById('background'),\n    backgroundColorText: document.getElementById('background-color'),\n    boxColorPicker: document.getElementById('box'),\n    boxColorText: document.getElementById('box-color'),\n\n    shadowTypeToggle: document.getElementById('toggle'),\n\n    refreshButton: document.querySelector('.generator__refresh-button'),\n    getCodeButton: document.querySelector('.generator__get-button'),\n    closeCodeButton: document.querySelector('.generator__close-button'),\n    copyButton: document.querySelector('.generator__copy-button'),\n\n    boxView: document.querySelector('.generator__box-view'),\n    shadowBox: document.querySelector('.generator__shadow-box'),\n    codePreview: document.querySelector('.generator__code-preview'),\n    codeContent: document.querySelector('.generator__code-content')\n  };\n}\n\nfunction syncRangeAndNumber(range, number) {\n  range.value = number.value;\n}\n\nfunction syncColorInputs(picker, text) {\n  picker.value = text.value;\n}\n\nfunction setInitialValues(elements) {\n  syncRangeAndNumber(elements.horizontalRange, elements.horizontalInput);\n  syncRangeAndNumber(elements.verticalRange, elements.verticalInput);\n  syncRangeAndNumber(elements.blurRange, elements.blurInput);\n  syncRangeAndNumber(elements.spreadRange, elements.spreadInput);\n  syncRangeAndNumber(elements.opacityRange, elements.opacityInput);\n\n  syncColorInputs(elements.shadowColorPicker, elements.shadowColorText);\n  syncColorInputs(elements.backgroundColorPicker, elements.backgroundColorText);\n  syncColorInputs(elements.boxColorPicker, elements.boxColorText);\n}\n\nfunction setupRangeNumberSync(rangeElement, numberElement) {\n  rangeElement.addEventListener('input', () => {\n    numberElement.value = rangeElement.value;\n  });\n\n  numberElement.addEventListener('input', () => {\n    rangeElement.value = numberElement.value;\n  });\n}\n\nfunction setupColorSync(colorPicker, colorText) {\n  colorPicker.addEventListener('input', () => {\n    colorText.value = colorPicker.value;\n  });\n\n  colorText.addEventListener('input', () => {\n    colorPicker.value = colorText.value;\n  });\n}\n\nfunction setupEventListeners(elements) {\n  setupRangeNumberSync(elements.horizontalRange, elements.horizontalInput);\n  setupRangeNumberSync(elements.verticalRange, elements.verticalInput);\n  setupRangeNumberSync(elements.blurRange, elements.blurInput);\n  setupRangeNumberSync(elements.spreadRange, elements.spreadInput);\n  setupRangeNumberSync(elements.opacityRange, elements.opacityInput);\n\n  setupColorSync(elements.shadowColorPicker, elements.shadowColorText);\n  setupColorSync(elements.backgroundColorPicker, elements.backgroundColorText);\n  setupColorSync(elements.boxColorPicker, elements.boxColorText);\n\n  elements.refreshButton.addEventListener('click', () => resetToDefaultButton(elements));\n  elements.getCodeButton.addEventListener('click', () => showCodePreview(elements));\n  elements.closeCodeButton.addEventListener('click', () => hideCodePreview(elements));\n  elements.copyButton.addEventListener('click', () => copyCodeToClipboard(elements));\n\n  const updateTriggers = [\n    elements.horizontalInput, elements.horizontalRange,\n    elements.verticalInput, elements.verticalRange,\n    elements.blurInput, elements.blurRange,\n    elements.spreadInput, elements.spreadRange,\n    elements.opacityInput, elements.opacityRange,\n    elements.shadowColorPicker, elements.shadowColorText,\n    elements.boxColorPicker, elements.boxColorText,\n    elements.shadowTypeToggle\n  ];\n\n  updateTriggers.forEach((element) => {\n    element.addEventListener('input', () => updateShadowPreview(elements));\n  });\n}\n\nfunction updateShadowPreview(elements) {\n  const horizontal = elements.horizontalInput.value;\n  const vertical = elements.verticalInput.value;\n  const blur = elements.blurInput.value;\n  const spread = elements.spreadInput.value;\n  const shadowColor = elements.shadowColorPicker.value;\n  const boxColor = elements.boxColorPicker.value;\n  const backgroundColor = elements.backgroundColorPicker.value;\n  const opacity = elements.opacityInput.value;\n  const shadowType = elements.shadowTypeToggle.checked ? 'inset' : 'outline';\n\n  elements.shadowBox.style.backgroundColor = backgroundColor;\n  elements.boxView.style.backgroundColor = boxColor;\n\n  const shadowColorWithOpacity = hexToRgba(shadowColor, opacity);\n  const shadowValue = `${horizontal}px ${vertical}px ${blur}px ${spread}px ${shadowColorWithOpacity} ${shadowType === 'inset' ? 'inset' : ''}`;\n\n  elements.boxView.style.boxShadow = shadowValue;\n}\n\nfunction showCodePreview(elements) {\n  const horizontal = elements.horizontalInput.value;\n  const vertical = elements.verticalInput.value;\n  const blur = elements.blurInput.value;\n  const spread = elements.spreadInput.value;\n  const shadowColor = elements.shadowColorPicker.value;\n  const boxColor = elements.boxColorPicker.value.toUpperCase();\n  const opacity = elements.opacityInput.value;\n  const shadowType = elements.shadowTypeToggle.checked ? 'inset' : 'outline';\n\n  const cssCode = generateCSSCode(horizontal, vertical, blur, spread, shadowColor, boxColor, opacity, shadowType);\n\n  elements.codeContent.textContent = cssCode;\n  elements.codePreview.style.zIndex = '7';\n}\n\nfunction hideCodePreview(elements) {\n  elements.codePreview.style.display = 'none';\n}\n\nasync function copyCodeToClipboard(elements) {\n  const code = elements.codeContent.textContent;\n  const buttonTextElement = elements.copyButton.querySelector('.generator__copy-button-text');\n  const originalText = buttonTextElement.textContent;\n\n  try {\n    await navigator.clipboard.writeText(code);\n    buttonTextElement.textContent = 'Copied!';\n\n    const startTime = performance.now();\n    const duration = 2000;\n\n    const animateReturn = (currentTime) => {\n      const elapsed = currentTime - startTime;\n      const progress = Math.min(elapsed / duration, 1);\n\n      if (progress < 1) {\n        requestAnimationFrame(animateReturn);\n      } else {\n        buttonTextElement.textContent = originalText;\n      }\n    };\n\n    requestAnimationFrame(animateReturn);\n  } catch {\n    throw new Error('Failed to copy CSS code');\n  }\n}\n\nfunction resetToDefaultButton (elements) {\n  elements.horizontalInput.value = 5;\n  elements.horizontalRange.value = 5;\n  elements.verticalInput.value = 5;\n  elements.verticalRange.value = 5;\n  elements.blurInput.value = 75;\n  elements.blurRange.value = 75;\n  elements.spreadInput.value = 0;\n  elements.spreadRange.value = 0;\n  elements.opacityInput.value = 0.30;\n  elements.opacityRange.value = 0.30;\n\n  elements.shadowColorPicker.value = '#000000';\n  elements.shadowColorText.value = '#000000';\n  elements.backgroundColorPicker.value = '#ffffff';\n  elements.backgroundColorText.value = '#ffffff';\n  elements.boxColorPicker.value = '#f3a712';\n  elements.boxColorText.value = '#f3a712';\n\n  elements.shadowTypeToggle.checked = false;\n\n  updateShadowPreview(elements);\n}\n", "import { initShadowGenerator } from './modules/shadow-generator.js';\n\ninitShadowGenerator();\n"],
  "mappings": "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",
  "names": []
}
